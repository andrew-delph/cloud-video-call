load("@npm//:defs.bzl", "npm_link_all_packages")
load("@aspect_rules_ts//ts:defs.bzl", "ts_project")
load("@aspect_rules_js//js:defs.bzl", "js_binary")

npm_link_all_packages(
    name = "node_modules",
)

ts_project(
    name = "ts",
    srcs = glob(["src/**/*.ts"]),
    declaration = True,
    out_dir = ".",
    deps = [
        ":node_modules",
    ],
)

js_binary(
    name = "index",
    data = [":ts"],
    entry_point = "src/job.js",
)

load("@aspect_rules_js//js:defs.bzl", "js_binary", "js_image_layer")
load("@io_bazel_rules_docker//container:container.bzl", "container_image", "container_push")
load("@io_bazel_rules_docker//container:layer.bzl", "container_layer")

js_image_layer(
    name = "layers",
    binary = ":index",
    root = "/app",
    visibility = ["//visibility:__pkg__"],
)

filegroup(
    name = "app_tar",
    srcs = [":layers"],
    output_group = "app",
)

container_layer(
    name = "app_layer",
    tars = [":app_tar"],
)

filegroup(
    name = "node_modules_tar",
    srcs = [":layers"],
    output_group = "node_modules",
)

container_layer(
    name = "node_modules_layer",
    tars = [":node_modules_tar"],
)

container_image(
    name = "image",
    architecture = "amd64",
    base = "@debian_amd64//image",
    cmd = ["/app/neo4j-jobs/index"],
    entrypoint = ["bash"],
    layers = [
        ":app_layer",
        ":node_modules_layer",
    ],
)

container_push(
    name = "image_push",
    format = "Docker",
    image = ":image",
    registry = "ghcr.io",
    repository = "andrew-delph/video-call-neo4j-jobs",
    tag = "latest",
)
