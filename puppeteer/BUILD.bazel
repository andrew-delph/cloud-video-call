load("@aspect_rules_js//js:defs.bzl", "js_binary", "js_image_layer")
load("@aspect_rules_swc//swc:defs.bzl", "swc")
load("@aspect_rules_ts//ts:defs.bzl", "ts_project")
load("@io_bazel_rules_docker//container:container.bzl", "container_image", "container_push")
load("@io_bazel_rules_docker//container:layer.bzl", "container_layer")
load("@io_bazel_rules_docker//docker/util:run.bzl", "container_run_and_commit_layer")
load("@npm//:defs.bzl", "npm_link_all_packages")

npm_link_all_packages(
    name = "node_modules",
)

ts_project(
    name = "ts",
    srcs = glob(["src/**/*.ts"]),
    declaration = True,
    out_dir = ".",
    transpiler = "tsc",
    deps = [
        ":node_modules",
    ],
)

js_binary(
    name = "puppeteer",
    args = ["--webcam-file $(location :input.mjpeg)"],
    copy_data_to_bin = True,
    data = [
        ":input.mjpeg",
        ":ts",
    ],
    entry_point = "src/browser.js",
)

js_image_layer(
    name = "layers",
    binary = ":puppeteer",
    root = "/app",
    visibility = ["//visibility:__pkg__"],
)

filegroup(
    name = "app_tar",
    srcs = [":layers"],
    output_group = "app",
)

container_layer(
    name = "app_layer",
    tars = [":app_tar"],
)

filegroup(
    name = "node_modules_tar",
    srcs = [":layers"],
    output_group = "node_modules",
)

container_layer(
    name = "node_modules_layer",
    tars = [":node_modules_tar"],
)

container_run_and_commit_layer(
    name = "proxy_layer",
    commands = [
        "apt update",
        "apt install curl -y",
        "curl -LOJ https://github.com/Snawoot/hola-proxy/releases/download/v1.9.1/hola-proxy.linux-amd64",
        "mv hola-proxy.linux-amd64 hola-proxy",
        "chmod +x hola-proxy",
        "apt clean",
    ],
    image = "@ubuntu//image",
)

container_run_and_commit_layer(
    name = "openvpn_layer",
    commands = [
        "apt update",
        "apt install openvpn easy-rsa curl netcat net-tools iputils-ping dnsutils tcpdump -y",
        "apt clean",
    ],
    image = "@ubuntu//image",
)

container_run_and_commit_layer(
    name = "puppeteer_layer",
    commands = [
        "apt update",
        "apt install -y wget curl",
        "curl -LO https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb",
        "apt-get install -y ./google-chrome-stable_current_amd64.deb",
        "rm google-chrome-stable_current_amd64.deb",
        "apt clean",
    ],
    image = "@ubuntu//image",
)

container_image(
    name = "image",
    base = "@ubuntu//image",
    cmd = ["/startup.sh"],
    env = {
        "DOCKER": "true",
        "RUN_COMMAND": "/app/puppeteer/puppeteer --webcam-file input.mjpeg",
        "PUPPETEER_EXECUTABLE_PATH": "/usr/bin/google-chrome-stable",
    },
    files = [
        "input.mjpeg",
        "pia-openvpn",
        "startup.sh",
    ],
    layers = [
        "proxy_layer",
        "openvpn_layer",
        "puppeteer_layer",
        ":node_modules_layer",
        ":app_layer",
    ],
)

container_push(
    name = "image_push",
    format = "Docker",
    image = ":image",
    registry = "ghcr.io",
    repository = "andrew-delph/video-call-puppeteer",
    tag = "latest",
)
